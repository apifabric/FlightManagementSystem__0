"models":
- "classname": |-
    Airport
  "code": |
    class Airport(Base):
        __tablename__ = 'airport'

        id = Column(Integer, primary_key=True)
        name = Column(String)
        city = Column(String)
        country = Column(String)
        iata_code = Column(String)
        icao_code = Column(String)
  "description": |-
    Model representing airports with basic information such as name, city, and country.
  "name": |-
    Airport
- "classname": |-
    Runway
  "code": |
    class Runway(Base):
        __tablename__ = 'runway'

        id = Column(Integer, primary_key=True)
        airport_id = Column(Integer, ForeignKey('airport.id'))
        length_ft = Column(Integer)
        width_ft = Column(Integer)
        surface = Column(String)
  "description": |-
    Model representing airport runways with details like length, width, and surface type.
  "name": |-
    Runway
- "classname": |-
    Flight
  "code": |
    class Flight(Base):
        __tablename__ = 'flight'

        id = Column(Integer, primary_key=True)
        airline = Column(String)
        flight_number = Column(String)
        origin_airport_id = Column(Integer, ForeignKey('airport.id'))
        destination_airport_id = Column(Integer, ForeignKey('airport.id'))
        departure_time = Column(DateTime)
        arrival_time = Column(DateTime)
  "description": |-
    Model representing flights, including details about the airline, flight number, and scheduled times.
  "name": |-
    Flight
- "classname": |-
    BaggageClaim
  "code": |
    class BaggageClaim(Base):
        __tablename__ = 'baggage_claim'

        id = Column(Integer, primary_key=True)
        airport_id = Column(Integer, ForeignKey('airport.id'))
        location = Column(String)
        capacity = Column(Integer)
  "description": |-
    Model representing baggage claim areas at airports with location and capacity details.
  "name": |-
    BaggageClaim
- "classname": |-
    Customer
  "code": |
    class Customer(Base):
        __tablename__ = 'customer'

        id = Column(Integer, primary_key=True)
        first_name = Column(String)
        last_name = Column(String)
        email = Column(String)
        phone_number = Column(String)
  "description": |-
    Model representing customers/passengers with personal contact information.
  "name": |-
    Customer
- "classname": |-
    Booking
  "code": |
    class Booking(Base):
        __tablename__ = 'booking'

        id = Column(Integer, primary_key=True)
        customer_id = Column(Integer, ForeignKey('customer.id'))
        flight_id = Column(Integer, ForeignKey('flight.id'))
        seat_type = Column(String)
        booking_date = Column(DateTime)
  "description": |-
    Model representing flight bookings made by customers, including seat type and booking date.
  "name": |-
    Booking
- "classname": |-
    Gate
  "code": |
    class Gate(Base):
        __tablename__ = 'gate'

        id = Column(Integer, primary_key=True)
        airport_id = Column(Integer, ForeignKey('airport.id'))
        gate_number = Column(String)
  "description": |-
    Model representing gates at airports where flights embark and disembark.
  "name": |-
    Gate
- "classname": |-
    Airline
  "code": |
    class Airline(Base):
        __tablename__ = 'airline'

        id = Column(Integer, primary_key=True)
        name = Column(String)
        country_of_origin = Column(String)
        iata_code = Column(String)
        icao_code = Column(String)
  "description": |-
    Model representing airlines with basic identification and country of origin.
  "name": |-
    Airline
- "classname": |-
    Cargo
  "code": |
    class Cargo(Base):
        __tablename__ = 'cargo'

        id = Column(Integer, primary_key=True)
        airway_bill_number = Column(String)
        flight_id = Column(Integer, ForeignKey('flight.id'))
        weight = Column(Integer)
        description = Column(String)
  "description": |-
    Model representing cargo items loaded on flights with weight and descriptive details.
  "name": |-
    Cargo
- "classname": |-
    Maintenance
  "code": |
    class Maintenance(Base):
        __tablename__ = 'maintenance'

        id = Column(Integer, primary_key=True)
        runway_id = Column(Integer, ForeignKey('runway.id'))
        maintenance_date = Column(DateTime)
        description = Column(String)
  "description": |-
    Model representing maintenance activities performed on runways with description and date.
  "name": |-
    Maintenance
- "classname": |-
    Terminal
  "code": |
    class Terminal(Base):
        __tablename__ = 'terminal'

        id = Column(Integer, primary_key=True)
        airport_id = Column(Integer, ForeignKey('airport.id'))
        terminal_number = Column(String)
  "description": |-
    Model representing airport terminals with an identifier linked to an airport.
  "name": |-
    Terminal
- "classname": |-
    Lounge
  "code": |
    class Lounge(Base):
        __tablename__ = 'lounge'

        id = Column(Integer, primary_key=True)
        terminal_id = Column(Integer, ForeignKey('terminal.id'))
        name = Column(String)
        capacity = Column(Integer)
  "description": |-
    Model representing lounges within airport terminals, including amenities like capacity.
  "name": |-
    Lounge
"name": |-
  FlightManagementSystem
"rules": []
"test_data": ""
"test_data_rows":
- "code": |-
    airport1 = Airport(name="John F. Kennedy International Airport", city="New York", country="USA", iata_code="JFK", icao_code="KJFK")
  "test_data_row_variable": |-
    airport1
- "code": |-
    airport2 = Airport(name="Los Angeles International Airport", city="Los Angeles", country="USA", iata_code="LAX", icao_code="KLAX")
  "test_data_row_variable": |-
    airport2
- "code": |-
    airport3 = Airport(name="Heathrow Airport", city="London", country="UK", iata_code="LHR", icao_code="EGLL")
  "test_data_row_variable": |-
    airport3
- "code": |-
    airport4 = Airport(name="Changi Airport", city="Singapore", country="Singapore", iata_code="SIN", icao_code="WSSS")
  "test_data_row_variable": |-
    airport4
"test_data_sqlite": ""
