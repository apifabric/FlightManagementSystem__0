{"name": "FlightManagementSystem", "description": "None", "complexity": "12", "prompt": "airport", "connection_string": "", "port": "6714", "pid": "1848", "directory": "/opt/projects/by-ulid/01JJYB6WJMHM1YBCX8G4S70MCA", "status": "Initializing Project", "response": {"models": [{"classname": "Airport", "code": "class Airport(Base):\n    __tablename__ = 'airport'\n\n    id = Column(Integer, primary_key=True)\n    name = Column(String)\n    city = Column(String)\n    country = Column(String)\n    iata_code = Column(String)\n    icao_code = Column(String)\n", "description": "Model representing airports with basic information such as name, city, and country.", "name": "Airport"}, {"classname": "Runway", "code": "class Runway(Base):\n    __tablename__ = 'runway'\n\n    id = Column(Integer, primary_key=True)\n    airport_id = Column(Integer, ForeignKey('airport.id'))\n    length_ft = Column(Integer)\n    width_ft = Column(Integer)\n    surface = Column(String)\n", "description": "Model representing airport runways with details like length, width, and surface type.", "name": "Runway"}, {"classname": "Flight", "code": "class Flight(Base):\n    __tablename__ = 'flight'\n\n    id = Column(Integer, primary_key=True)\n    airline = Column(String)\n    flight_number = Column(String)\n    origin_airport_id = Column(Integer, ForeignKey('airport.id'))\n    destination_airport_id = Column(Integer, ForeignKey('airport.id'))\n    departure_time = Column(DateTime)\n    arrival_time = Column(DateTime)\n", "description": "Model representing flights, including details about the airline, flight number, and scheduled times.", "name": "Flight"}, {"classname": "BaggageClaim", "code": "class BaggageClaim(Base):\n    __tablename__ = 'baggage_claim'\n\n    id = Column(Integer, primary_key=True)\n    airport_id = Column(Integer, ForeignKey('airport.id'))\n    location = Column(String)\n    capacity = Column(Integer)\n", "description": "Model representing baggage claim areas at airports with location and capacity details.", "name": "BaggageClaim"}, {"classname": "Customer", "code": "class Customer(Base):\n    __tablename__ = 'customer'\n\n    id = Column(Integer, primary_key=True)\n    first_name = Column(String)\n    last_name = Column(String)\n    email = Column(String)\n    phone_number = Column(String)\n", "description": "Model representing customers/passengers with personal contact information.", "name": "Customer"}, {"classname": "Booking", "code": "class Booking(Base):\n    __tablename__ = 'booking'\n\n    id = Column(Integer, primary_key=True)\n    customer_id = Column(Integer, ForeignKey('customer.id'))\n    flight_id = Column(Integer, ForeignKey('flight.id'))\n    seat_type = Column(String)\n    booking_date = Column(DateTime)\n", "description": "Model representing flight bookings made by customers, including seat type and booking date.", "name": "Booking"}, {"classname": "Gate", "code": "class Gate(Base):\n    __tablename__ = 'gate'\n\n    id = Column(Integer, primary_key=True)\n    airport_id = Column(Integer, ForeignKey('airport.id'))\n    gate_number = Column(String)\n", "description": "Model representing gates at airports where flights embark and disembark.", "name": "Gate"}, {"classname": "Airline", "code": "class Airline(Base):\n    __tablename__ = 'airline'\n\n    id = Column(Integer, primary_key=True)\n    name = Column(String)\n    country_of_origin = Column(String)\n    iata_code = Column(String)\n    icao_code = Column(String)\n", "description": "Model representing airlines with basic identification and country of origin.", "name": "Airline"}, {"classname": "Cargo", "code": "class Cargo(Base):\n    __tablename__ = 'cargo'\n\n    id = Column(Integer, primary_key=True)\n    airway_bill_number = Column(String)\n    flight_id = Column(Integer, ForeignKey('flight.id'))\n    weight = Column(Integer)\n    description = Column(String)\n", "description": "Model representing cargo items loaded on flights with weight and descriptive details.", "name": "Cargo"}, {"classname": "Maintenance", "code": "class Maintenance(Base):\n    __tablename__ = 'maintenance'\n\n    id = Column(Integer, primary_key=True)\n    runway_id = Column(Integer, ForeignKey('runway.id'))\n    maintenance_date = Column(DateTime)\n    description = Column(String)\n", "description": "Model representing maintenance activities performed on runways with description and date.", "name": "Maintenance"}, {"classname": "Terminal", "code": "class Terminal(Base):\n    __tablename__ = 'terminal'\n\n    id = Column(Integer, primary_key=True)\n    airport_id = Column(Integer, ForeignKey('airport.id'))\n    terminal_number = Column(String)\n", "description": "Model representing airport terminals with an identifier linked to an airport.", "name": "Terminal"}, {"classname": "Lounge", "code": "class Lounge(Base):\n    __tablename__ = 'lounge'\n\n    id = Column(Integer, primary_key=True)\n    terminal_id = Column(Integer, ForeignKey('terminal.id'))\n    name = Column(String)\n    capacity = Column(Integer)\n", "description": "Model representing lounges within airport terminals, including amenities like capacity.", "name": "Lounge"}], "rules": [], "test_data": "", "test_data_rows": [{"test_data_row_variable": "airport1", "code": "airport1 = Airport(name=\"John F. Kennedy International Airport\", city=\"New York\", country=\"USA\", iata_code=\"JFK\", icao_code=\"KJFK\")"}, {"test_data_row_variable": "airport2", "code": "airport2 = Airport(name=\"Los Angeles International Airport\", city=\"Los Angeles\", country=\"USA\", iata_code=\"LAX\", icao_code=\"KLAX\")"}, {"test_data_row_variable": "airport3", "code": "airport3 = Airport(name=\"Heathrow Airport\", city=\"London\", country=\"UK\", iata_code=\"LHR\", icao_code=\"EGLL\")"}, {"test_data_row_variable": "airport4", "code": "airport4 = Airport(name=\"Changi Airport\", city=\"Singapore\", country=\"Singapore\", iata_code=\"SIN\", icao_code=\"WSSS\")"}], "test_data_sqlite": "", "name": "FlightManagementSystem"}, "security": "None", "repository": "https://github.com/apifabric/FlightManagementSystem__0.git", "log": "2025-01-31 14:11:08 Generating Database, Logic, API & Frontend..\n2025-01-31 14:11:32 Model Generation Successful\n2025-01-31 14:11:36 Project created, starting..\n2025-01-31 14:11:38 Creating sample data..\n2025-01-31 14:11:43 Verifying Rules..\n", "cost": "None", "user_id": "029b654b-f1fa-4c4c-9822-b292bfbd2ae2", "parent_id": "None", "started": "2025-01-31 14:11:06", "created_at": "2025-01-31 14:11:04.410016", "last_access": "None", "download": "/download_project/01JJYB6WJMHM1YBCX8G4S70MCA", "display_name": "FlightManagementSystem", "link": "/01JJYB6WJMHM1YBCX8G4S70MCA/admin-app/index.html#/?raSpa"}
